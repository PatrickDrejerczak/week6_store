{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\patri\\\\Desktop\\\\CoderSchool\\\\Week_6\\\\Friday\\\\week6_store\\\\src\\\\context.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { storeProducts, detailProduct } from './data';\nconst props = {\n  children: PropTypes.Object\n};\nconst ProductContext = /*#__PURE__*/React.createContext();\n\nclass ProductProvider extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      products: [],\n      detailProduct: detailProduct,\n      cart: [],\n      modalOpen: false,\n      modalProduct: detailProduct,\n      cartSubTotal: 0,\n      cartTax: 0,\n      cartTotal: 0\n    };\n\n    this.openModal = id => {\n      const product = this.getItem(id);\n      this.setState(() => {\n        return {\n          modalProject: product,\n          modalOpen: true\n        };\n      });\n    };\n\n    this.closeModal = () => {\n      this.setState(() => {\n        return {\n          modalOpen: false\n        };\n      });\n    };\n\n    this.increment = id => {\n      let tempCart = [...this.state.cart];\n      const selectedProduct = tempCart.find(item => item.id === id);\n      const index = tempCart.indexOf(selectedProduct);\n      const product = tempCart[index];\n      product.count = product.count + 1;\n      product.total = product.count * product.price;\n      this.setState(() => {\n        return {\n          cart: [...tempCart]\n        };\n      }, () => {\n        this.addTotals();\n      });\n    };\n\n    this.decrement = id => {\n      let tempCart = [...this.state.cart];\n      const selectedProduct = tempCart.find(item => item.id === id);\n      const index = tempCart.indexOf(selectedProduct);\n      const product = tempCart[index];\n      product.count = product.count - 1;\n\n      if (product.count === 0) {\n        this.removeItem(id);\n      } else {\n        product.total = product.count * product.price;\n        this.setState(() => {\n          return {\n            cart: [...tempCart]\n          };\n        }, () => {\n          this.addTotals();\n        });\n      }\n    };\n\n    this.clearCart = () => {\n      this.setState(() => {\n        return {\n          cart: []\n        };\n      }, () => {\n        this.setProducts();\n        this.addTotals();\n      });\n    };\n\n    this.setProducts = () => {\n      let tempProducts = [];\n      storeProducts.forEach(item => {\n        const singleItem = { ...item\n        };\n        tempProducts = [...tempProducts, singleItem];\n      });\n      this.setState(() => {\n        return {\n          products: tempProducts\n        };\n      });\n    };\n\n    this.handleDetail = id => () => {\n      const product = this.getItem(id);\n      this.setState({\n        detailProduct: product\n      });\n    };\n\n    this.getItem = id => {\n      const product = this.state.products.find(item => item.id === id);\n      return product;\n    };\n\n    this.addProduct = id => {\n      let tempProducts = [...this.state.products];\n      const product = this.getItem(id);\n      const index = tempProducts.indexOf(product);\n      product.inCart = true;\n      product.count = 1;\n      const price = product.price;\n      product.total = price;\n      this.setState(() => {\n        return {\n          products: tempProducts,\n          cart: [...this.state.cart, product]\n        };\n      }, () => {\n        this.addTotals();\n      });\n    };\n\n    this.removeItem = id => {\n      let tempProducts = [...this.state.products];\n      let tempCart = [...this.state.cart];\n      tempCart = tempCart.filter(item => item.id !== id);\n      const index = tempProducts.indexOf(this.getItem(id));\n      let removedProduct = tempProducts[index];\n      removedProduct.inCart = false;\n      removedProduct.count = 0;\n      removedProduct.total = 0;\n      this.setState(() => {\n        return {\n          cart: [...tempCart],\n          products: [...tempProducts]\n        };\n      }, () => {\n        this.addTotals();\n      });\n    };\n\n    this.addTotals = () => {\n      let subTotal = 0;\n      this.state.cart.map(item => subTotal += item.total);\n      const tempTax = subTotal * 0.1;\n      const tax = parseFloat(tempTax.toFixed(2));\n      const total = subTotal + tax;\n      this.setState(() => {\n        return {\n          cartSubTotal: subTotal,\n          cartTax: tax,\n          cartTotal: total\n        };\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.setProducts();\n  }\n\n  render() {\n    console.log('CONTEXT>>', this.state.cart);\n    return /*#__PURE__*/_jsxDEV(ProductContext.Provider, {\n      value: { ...this.state,\n        handleDetail: this.handleDetail,\n        addProduct: this.addProduct,\n        openModal: this.openModal,\n        closeModal: this.closeModal,\n        increment: this.increment,\n        decrement: this.decrement,\n        clearCart: this.clearCart,\n        removeItem: this.removeItem\n      },\n      children: this.props.children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nconst ProductConsumer = ProductContext.Consumer;\nProductProvider.propTypes = props;\nexport { ProductConsumer, ProductProvider };","map":{"version":3,"sources":["C:/Users/patri/Desktop/CoderSchool/Week_6/Friday/week6_store/src/context.js"],"names":["React","Component","PropTypes","storeProducts","detailProduct","props","children","Object","ProductContext","createContext","ProductProvider","state","products","cart","modalOpen","modalProduct","cartSubTotal","cartTax","cartTotal","openModal","id","product","getItem","setState","modalProject","closeModal","increment","tempCart","selectedProduct","find","item","index","indexOf","count","total","price","addTotals","decrement","removeItem","clearCart","setProducts","tempProducts","forEach","singleItem","handleDetail","addProduct","inCart","filter","removedProduct","subTotal","map","tempTax","tax","parseFloat","toFixed","componentDidMount","render","console","log","ProductConsumer","Consumer","propTypes"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { storeProducts, detailProduct } from './data';\r\n\r\nconst props = {\r\n  children: PropTypes.Object,\r\n};\r\n\r\nconst ProductContext = React.createContext();\r\n\r\nclass ProductProvider extends Component {\r\n  state = {\r\n    products: [],\r\n    detailProduct: detailProduct,\r\n    cart: [],\r\n    modalOpen: false,\r\n    modalProduct: detailProduct,\r\n    cartSubTotal: 0,\r\n    cartTax: 0,\r\n    cartTotal: 0,\r\n  };\r\n  openModal = (id) => {\r\n    const product = this.getItem(id);\r\n    this.setState(() => {\r\n      return { modalProject: product, modalOpen: true };\r\n    });\r\n  };\r\n  closeModal = () => {\r\n    this.setState(() => {\r\n      return { modalOpen: false };\r\n    });\r\n  };\r\n  componentDidMount() {\r\n    this.setProducts();\r\n  }\r\n  increment = (id) => {\r\n    let tempCart = [...this.state.cart];\r\n    const selectedProduct = tempCart.find((item) => item.id === id);\r\n    const index = tempCart.indexOf(selectedProduct);\r\n    const product = tempCart[index];\r\n    product.count = product.count + 1;\r\n    product.total = product.count * product.price;\r\n    this.setState(\r\n      () => {\r\n        return { cart: [...tempCart] };\r\n      },\r\n      () => {\r\n        this.addTotals();\r\n      }\r\n    );\r\n  };\r\n  decrement = (id) => {\r\n    let tempCart = [...this.state.cart];\r\n    const selectedProduct = tempCart.find((item) => item.id === id);\r\n    const index = tempCart.indexOf(selectedProduct);\r\n    const product = tempCart[index];\r\n    product.count = product.count - 1;\r\n    if (product.count === 0) {\r\n      this.removeItem(id);\r\n    } else {\r\n      product.total = product.count * product.price;\r\n      this.setState(\r\n        () => {\r\n          return { cart: [...tempCart] };\r\n        },\r\n        () => {\r\n          this.addTotals();\r\n        }\r\n      );\r\n    }\r\n  };\r\n  clearCart = () => {\r\n    this.setState(\r\n      () => {\r\n        return { cart: [] };\r\n      },\r\n      () => {\r\n        this.setProducts();\r\n        this.addTotals();\r\n      }\r\n    );\r\n  };\r\n  setProducts = () => {\r\n    let tempProducts = [];\r\n    storeProducts.forEach((item) => {\r\n      const singleItem = { ...item };\r\n      tempProducts = [...tempProducts, singleItem];\r\n    });\r\n    this.setState(() => {\r\n      return { products: tempProducts };\r\n    });\r\n  };\r\n\r\n  handleDetail = (id) => () => {\r\n    const product = this.getItem(id);\r\n    this.setState({ detailProduct: product });\r\n  };\r\n\r\n  getItem = (id) => {\r\n    const product = this.state.products.find((item) => item.id === id);\r\n    return product;\r\n  };\r\n\r\n  addProduct = (id) => {\r\n    let tempProducts = [...this.state.products];\r\n    const product = this.getItem(id);\r\n    const index = tempProducts.indexOf(product);\r\n    product.inCart = true;\r\n    product.count = 1;\r\n    const price = product.price;\r\n    product.total = price;\r\n\r\n    this.setState(\r\n      () => {\r\n        return { products: tempProducts, cart: [...this.state.cart, product] };\r\n      },\r\n      () => {\r\n        this.addTotals();\r\n      }\r\n    );\r\n  };\r\n\r\n  removeItem = (id) => {\r\n    let tempProducts = [...this.state.products];\r\n    let tempCart = [...this.state.cart];\r\n    tempCart = tempCart.filter((item) => item.id !== id);\r\n    const index = tempProducts.indexOf(this.getItem(id));\r\n    let removedProduct = tempProducts[index];\r\n    removedProduct.inCart = false;\r\n    removedProduct.count = 0;\r\n    removedProduct.total = 0;\r\n    this.setState(\r\n      () => {\r\n        return {\r\n          cart: [...tempCart],\r\n          products: [...tempProducts],\r\n        };\r\n      },\r\n      () => {\r\n        this.addTotals();\r\n      }\r\n    );\r\n  };\r\n  addTotals = () => {\r\n    let subTotal = 0;\r\n    this.state.cart.map((item) => (subTotal += item.total));\r\n    const tempTax = subTotal * 0.1;\r\n    const tax = parseFloat(tempTax.toFixed(2));\r\n    const total = subTotal + tax;\r\n    this.setState(() => {\r\n      return {\r\n        cartSubTotal: subTotal,\r\n        cartTax: tax,\r\n        cartTotal: total,\r\n      };\r\n    });\r\n  };\r\n  render() {\r\n    console.log('CONTEXT>>', this.state.cart);\r\n\r\n    return (\r\n      <ProductContext.Provider\r\n        value={{\r\n          ...this.state,\r\n          handleDetail: this.handleDetail,\r\n          addProduct: this.addProduct,\r\n          openModal: this.openModal,\r\n          closeModal: this.closeModal,\r\n          increment: this.increment,\r\n          decrement: this.decrement,\r\n          clearCart: this.clearCart,\r\n          removeItem: this.removeItem,\r\n        }}\r\n      >\r\n        {this.props.children}\r\n      </ProductContext.Provider>\r\n    );\r\n  }\r\n}\r\n\r\nconst ProductConsumer = ProductContext.Consumer;\r\nProductProvider.propTypes = props;\r\nexport { ProductConsumer, ProductProvider };\r\n"]},"metadata":{},"sourceType":"module"}